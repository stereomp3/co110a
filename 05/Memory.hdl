// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:

    // 2的14次方(16384)以下都歸RAM管理(0~13 bit)，第15個位元 == 0，所以用Not判定是不是要使用RAM
    Not(in = address[14], out = RAM16);

    // screen管理 2**14(16384) ~ 2**15(24575)，第15個位元 == 1
    And(a = address[14], b = load, out = screenLOAD);

    And(a = RAM16, b = load, out = RAMLOAD);

    RAM16K(in = in, address = address[0..13], load = RAMLOAD, out = R);
    Screen(in = in, address = address[0..12], load = screenLOAD, out = S);

    // 讀取24576(110000000000000)可以知道按鍵位置(ASCLL)
    Keyboard(out = kout);

    // 第14位元判斷是鍵盤輸出還是螢幕輸出
    Mux16(a = S, b = kout, sel = address[13], out = if1);
    // 第15位元判斷要輸出S還是R還是K
    Mux16(a = R, b = if1, sel = address[14], out = out);
}